name: Performance Tests

on:
  pull_request:
    paths:
      - 'src/**'
      - 'tests/e2e/performance/**'
      - 'playwright.config.ts'
      - 'package.json'
  push:
    branches:
      - main
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      update_baseline:
        description: 'Update performance baseline'
        required: false
        type: boolean
        default: false

jobs:
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Download baseline
        if: github.event_name == 'pull_request'
        uses: actions/download-artifact@v4
        with:
          name: performance-baseline
          path: performance-baselines
        continue-on-error: true
        
      - name: Run performance tests
        run: npm run test:performance:ci
        env:
          CI: true
          
      - name: Upload performance report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-report-${{ github.sha }}
          path: test-results/performance/
          retention-days: 30
          
      - name: Upload baseline
        if: github.ref == 'refs/heads/main' || inputs.update_baseline
        uses: actions/upload-artifact@v4
        with:
          name: performance-baseline
          path: performance-baselines/main-baseline.json
          retention-days: 90
          
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const reportPath = path.join('test-results', 'performance', 'performance-report.json');
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf-8'));
              
              const summary = report.aggregated.summary;
              const violations = report.aggregated.violations || [];
              
              let comment = '## üöÄ Performance Test Results\n\n';
              comment += `- **Total Tests**: ${summary.totalTests}\n`;
              comment += `- **Passed**: ${summary.passedTests} ‚úÖ\n`;
              comment += `- **Failed**: ${summary.failedTests} ‚ùå\n\n`;
              
              comment += '### üìä Average Metrics\n';
              comment += '| Metric | Value | Status |\n';
              comment += '|--------|-------|--------|\n';
              comment += `| FCP | ${summary.averageMetrics.FCP}ms | ${summary.averageMetrics.FCP < 1800 ? '‚úÖ' : '‚ùå'} |\n`;
              comment += `| LCP | ${summary.averageMetrics.LCP}ms | ${summary.averageMetrics.LCP < 2500 ? '‚úÖ' : '‚ùå'} |\n`;
              comment += `| TTI | ${summary.averageMetrics.TTI}ms | ${summary.averageMetrics.TTI < 3800 ? '‚úÖ' : '‚ùå'} |\n`;
              comment += `| TBT | ${summary.averageMetrics.TBT}ms | ${summary.averageMetrics.TBT < 200 ? '‚úÖ' : '‚ùå'} |\n`;
              comment += `| CLS | ${summary.averageMetrics.CLS} | ${summary.averageMetrics.CLS < 0.1 ? '‚úÖ' : '‚ùå'} |\n`;
              
              if (violations.length > 0) {
                comment += '\n### ‚ö†Ô∏è Performance Budget Violations\n';
                violations.forEach(v => {
                  comment += `- **${v.page}**: ${v.metric} = ${v.value}ms (threshold: ${v.threshold}ms)\n`;
                });
              }
              
              comment += '\n[View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
              
            } catch (error) {
              console.error('Failed to post comment:', error);
            }

  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/landing
            http://localhost:3000/documents
          uploadArtifacts: true
          temporaryPublicStorage: true