name: Scheduled Tests

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      update_baselines:
        description: 'Update visual and performance baselines'
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: '20'

jobs:
  # Full E2E Test Suite
  full-e2e-suite:
    name: Full E2E Test Suite
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install all Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run all E2E tests
        run: npm run test:e2e
        continue-on-error: true
        
      - name: Generate test report
        if: always()
        run: npx playwright show-report --host 0.0.0.0 --port 9323 &
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-e2e-results-${{ github.run_number }}
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Performance Baseline Update
  performance-baseline:
    name: Update Performance Baseline
    runs-on: ubuntu-latest
    if: github.event.inputs.update_baselines == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Run performance tests
        run: npm run test:perf:all
        
      - name: Update baseline
        run: npm run perf:baseline
        
      - name: Commit baseline updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add performance-baselines/
          git diff --staged --quiet || git commit -m "chore: update performance baselines [skip ci]"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  # Visual Baseline Update
  visual-baseline:
    name: Update Visual Baselines
    runs-on: ubuntu-latest
    if: github.event.inputs.update_baselines == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Update visual baselines
        run: npm run test:visual:update
        
      - name: Upload new baselines
        uses: actions/upload-artifact@v4
        with:
          name: visual-baselines
          path: tests/e2e/visual/baselines/
          retention-days: 90
          overwrite: true

  # Dependency Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Run npm audit
        run: |
          npm audit --production
          npm audit --audit-level=moderate
        
      - name: Check for outdated dependencies
        run: npm outdated || true
        
      - name: Create issue for vulnerabilities
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'Security vulnerabilities detected in dependencies';
            const body = `The scheduled security audit has detected vulnerabilities.
            
            Please run \`npm audit\` locally and fix the issues.
            
            [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body,
              labels: ['security', 'dependencies']
            });

  # Test Health Report
  test-health-report:
    name: Generate Test Health Report
    runs-on: ubuntu-latest
    needs: [full-e2e-suite]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          pattern: nightly-e2e-results-*
          path: test-artifacts/
          
      - name: Generate health report
        run: |
          echo "# Test Health Report" > test-health-report.md
          echo "Date: $(date)" >> test-health-report.md
          echo "" >> test-health-report.md
          
          # Add test statistics
          echo "## Test Statistics" >> test-health-report.md
          echo "- Total test files: $(find tests -name "*.spec.ts" | wc -l)" >> test-health-report.md
          echo "- Unit tests: $(find src -name "*.test.ts" -o -name "*.test.tsx" | wc -l)" >> test-health-report.md
          echo "- E2E tests: $(find tests/e2e -name "*.spec.ts" | wc -l)" >> test-health-report.md
          
      - name: Upload health report
        uses: actions/upload-artifact@v4
        with:
          name: test-health-report
          path: test-health-report.md
          retention-days: 90